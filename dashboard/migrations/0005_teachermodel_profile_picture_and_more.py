# Generated by Django 5.1.3 on 2025-01-16 14:19

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('dashboard', '0004_rename_class_model_formattedtextmodel_class_id_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='teachermodel',
            name='profile_picture',
            field=models.ImageField(blank=True, null=True, upload_to='teacher_profile_pictures/'),
        ),
        migrations.AlterField(
            model_name='scenariomodel',
            name='end_conversation',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='scenariomodel',
            name='end_conversation_saying',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='scenariomodel',
            name='feedback',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='StudentActivityLogModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('start_content', 'Inicio de contenido'), ('complete_content', 'Complet贸 contenido'), ('submit_answer', 'Envi贸 respuesta'), ('retry_content', 'Reintent贸 contenido'), ('view_feedback', 'Vio retroalimentaci贸n')], max_length=20)),
                ('score', models.FloatField(blank=True, null=True)),
                ('details', models.JSONField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('class_content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.classcontentmodel')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_logs', to='dashboard.studentmodel')),
            ],
        ),
        migrations.CreateModel(
            name='ClassProgressModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress_percentage', models.FloatField(default=0)),
                ('average_score', models.FloatField(default=0)),
                ('completed', models.BooleanField(default=False)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('class_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.classmodel')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_progress', to='dashboard.studentmodel')),
            ],
            options={
                'unique_together': {('student', 'class_model')},
            },
        ),
        migrations.CreateModel(
            name='CourseProgressModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress_percentage', models.FloatField(default=0)),
                ('average_score', models.FloatField(default=0)),
                ('completed', models.BooleanField(default=False)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.coursemodel')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_progress', to='dashboard.studentmodel')),
            ],
            options={
                'unique_together': {('student', 'course')},
            },
        ),
    ]
